describe "conjunto de tests de los mensajeros" { 

		fixture{
  		paquete.pagar()
      paqueton.pagar(150) 
      paqueton.destinos([puenteDeBrooklyn, laMatrix]) 
    	mensajeria.contratar(neo)
    	mensajeria.contratar(chuck)
    	mensajeria.contratar(roberto)
    }
    
    method agregarMuchosMensajeros(){
    	mensajeria.contratar(neo)
    	mensajeria.contratar(chuck)
    	mensajeria.contratar(roberto)
	}

	test "El paqueton con dos destinos y pagos de 150 y 50 esta pago" {
    paqueton.pagar(50) 
    assert.that(paqueton.estaPago())
	}
	
	test "El paqueton con dos destinos y pago parcial de 150 no esta pago" {
    assert.notThat(paqueton.estaPago())
	}
	
	test "Con cualquier mensajero que haya en la mensajeria, el paquetin puede ser llevado"{
		mensajeria.contratar("mensajero trucho")
		assert.that(mensajeria.algunoPuedeLlevarlo(paquetin))
	}
	test "el paqueton no puede ser entregado si sólo se pagó una parte"{
		assert.notThat(mensajeria.algunoPuedeLlevarlo(paqueton))
	}
	test "el paqueton puede ser entregado si esta pagó y en la mensajeria hay mensajeros que pueden ir a todos los destinos"{
		assert.that(mensajeria.algunoPuedeLlevarlo(paqueton))
	}

}